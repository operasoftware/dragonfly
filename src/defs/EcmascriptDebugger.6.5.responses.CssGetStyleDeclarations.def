message <span class="message">CssStyleDeclarations</span>
{
  repeated <span class="string">string</span> computedStyleList = 1;
  repeated NodeStyle nodeStyleList = 2;
  {
    required <span class="number">uint32</span> objectID = 1;
    required <span class="string">string</span> elementName = 2;
    repeated StyleDeclaration styleList = 3;
    {
      required RuleOrigin origin = 1;
      {
        <span class="comment">/**
          * This means that the user-agent provided this rule, i.e. the
          * rule is part of the default style.
          */</span>
        <span class="enum">USER_AGENT</span> = 1;
        <span class="comment">/**
          * This means the rule originated from a local CSS file specified by the
          * user, i.e. User CSS.
          */</span>
        <span class="enum">LOCAL</span> = 2;
        <span class="comment">/**
          * Author rules originate from stylesheets either in separate files, or
          * inline in the document.
          */</span>
        <span class="enum">AUTHOR</span> = 3;
        <span class="comment">/**
          * The rule originated from a 'style' attribute on the HTML element.
          */</span>
        <span class="enum">ELEMENT</span> = 4;
        <span class="comment">/**
          * The rule is the CSS-equivalent of SVG presentational attributes.
          * 
          * @since 6.5
          */</span>
        <span class="enum">SVG</span> = 5;
      }
      repeated <span class="number">uint32</span> indexList = 2;
      repeated <span class="string">string</span> valueList = 3;
      repeated <span class="boolean">bool</span> priorityList = 4;
      repeated DeclarationStatus statusList = 5;
      {
        <span class="enum">OVERWRITTEN</span> = 0;
        <span class="enum">USED</span> = 1;
      }
      optional <span class="string">string</span> selector = 6;
      optional <span class="number">uint32</span> specificity = 7;
      optional <span class="number">uint32</span> stylesheetID = 8;
      optional <span class="number">uint32</span> ruleID = 9;
      optional <span class="number">uint32</span> ruleType = 10;
    }
  }
}
