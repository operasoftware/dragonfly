message <span class="message">ScreenWatcher</span>
{
  <span class="comment">/**
    * Number of milliseconds to wait before capturing the screen area.
    * 
    * The default is 10 seconds.
    */</span>
  required <span class="number">uint32</span> timeOut = 1 [default = 10000];
  <span class="comment">/**
    * Define an area on the page, relative to the page (not viewport).
    * 
    * The default area is {x=0, y=0, w=200, h=100}.
    */</span>
  required Area area = 2;
  {
    required <span class="number">int32</span> x = 1;
    required <span class="number">int32</span> y = 2;
    required <span class="number">int32</span> w = 3;
    required <span class="number">int32</span> h = 4;
  }
  <span class="comment">/**
    * ``MD5`` sum of an image, in hexadecimal.
    */</span>
  repeated <span class="string">string</span> md5List = 3;
  <span class="comment">/**
    * The ID of the window to watch, the default (or 0) is to watch the current window
    */</span>
  optional <span class="number">uint32</span> windowID = 4 [default = 0];
  repeated ColorSpec colorSpecList = 5;
  {
    required <span class="number">uint32</span> id = 1;
    optional <span class="number">uint32</span> redLow = 2 [default = 0];
    optional <span class="number">uint32</span> redHigh = 3 [default = 255];
    optional <span class="number">uint32</span> greenLow = 4 [default = 0];
    optional <span class="number">uint32</span> greenHigh = 5 [default = 255];
    optional <span class="number">uint32</span> blueLow = 6 [default = 0];
    optional <span class="number">uint32</span> blueHigh = 7 [default = 255];
  }
  <span class="comment">/**
    * If true then the image data will be sent in the response `WatcherResult.png`, otherwise the field will be omitted
    * Can be used to reduce bandwith usage in applications where only hashes are needed.
    */</span>
  optional <span class="boolean">bool</span> includeImage = 6 [default = true];
}
